// Code generated by ent, DO NOT EDIT.

package featureflagversion

import (
	"entgo.io/ent/dialect/sql"
	"github.com/davidroman0O/tempolite/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldLTE(FieldID, id))
}

// WorkflowType applies equality check predicate on the "workflow_type" field. It's identical to WorkflowTypeEQ.
func WorkflowType(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEQ(FieldWorkflowType, v))
}

// WorkflowID applies equality check predicate on the "workflow_id" field. It's identical to WorkflowIDEQ.
func WorkflowID(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEQ(FieldWorkflowID, v))
}

// ChangeID applies equality check predicate on the "change_id" field. It's identical to ChangeIDEQ.
func ChangeID(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEQ(FieldChangeID, v))
}

// Version applies equality check predicate on the "version" field. It's identical to VersionEQ.
func Version(v int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEQ(FieldVersion, v))
}

// WorkflowTypeEQ applies the EQ predicate on the "workflow_type" field.
func WorkflowTypeEQ(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEQ(FieldWorkflowType, v))
}

// WorkflowTypeNEQ applies the NEQ predicate on the "workflow_type" field.
func WorkflowTypeNEQ(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldNEQ(FieldWorkflowType, v))
}

// WorkflowTypeIn applies the In predicate on the "workflow_type" field.
func WorkflowTypeIn(vs ...string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldIn(FieldWorkflowType, vs...))
}

// WorkflowTypeNotIn applies the NotIn predicate on the "workflow_type" field.
func WorkflowTypeNotIn(vs ...string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldNotIn(FieldWorkflowType, vs...))
}

// WorkflowTypeGT applies the GT predicate on the "workflow_type" field.
func WorkflowTypeGT(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldGT(FieldWorkflowType, v))
}

// WorkflowTypeGTE applies the GTE predicate on the "workflow_type" field.
func WorkflowTypeGTE(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldGTE(FieldWorkflowType, v))
}

// WorkflowTypeLT applies the LT predicate on the "workflow_type" field.
func WorkflowTypeLT(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldLT(FieldWorkflowType, v))
}

// WorkflowTypeLTE applies the LTE predicate on the "workflow_type" field.
func WorkflowTypeLTE(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldLTE(FieldWorkflowType, v))
}

// WorkflowTypeContains applies the Contains predicate on the "workflow_type" field.
func WorkflowTypeContains(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldContains(FieldWorkflowType, v))
}

// WorkflowTypeHasPrefix applies the HasPrefix predicate on the "workflow_type" field.
func WorkflowTypeHasPrefix(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldHasPrefix(FieldWorkflowType, v))
}

// WorkflowTypeHasSuffix applies the HasSuffix predicate on the "workflow_type" field.
func WorkflowTypeHasSuffix(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldHasSuffix(FieldWorkflowType, v))
}

// WorkflowTypeEqualFold applies the EqualFold predicate on the "workflow_type" field.
func WorkflowTypeEqualFold(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEqualFold(FieldWorkflowType, v))
}

// WorkflowTypeContainsFold applies the ContainsFold predicate on the "workflow_type" field.
func WorkflowTypeContainsFold(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldContainsFold(FieldWorkflowType, v))
}

// WorkflowIDEQ applies the EQ predicate on the "workflow_id" field.
func WorkflowIDEQ(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEQ(FieldWorkflowID, v))
}

// WorkflowIDNEQ applies the NEQ predicate on the "workflow_id" field.
func WorkflowIDNEQ(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldNEQ(FieldWorkflowID, v))
}

// WorkflowIDIn applies the In predicate on the "workflow_id" field.
func WorkflowIDIn(vs ...string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldIn(FieldWorkflowID, vs...))
}

// WorkflowIDNotIn applies the NotIn predicate on the "workflow_id" field.
func WorkflowIDNotIn(vs ...string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldNotIn(FieldWorkflowID, vs...))
}

// WorkflowIDGT applies the GT predicate on the "workflow_id" field.
func WorkflowIDGT(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldGT(FieldWorkflowID, v))
}

// WorkflowIDGTE applies the GTE predicate on the "workflow_id" field.
func WorkflowIDGTE(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldGTE(FieldWorkflowID, v))
}

// WorkflowIDLT applies the LT predicate on the "workflow_id" field.
func WorkflowIDLT(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldLT(FieldWorkflowID, v))
}

// WorkflowIDLTE applies the LTE predicate on the "workflow_id" field.
func WorkflowIDLTE(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldLTE(FieldWorkflowID, v))
}

// WorkflowIDContains applies the Contains predicate on the "workflow_id" field.
func WorkflowIDContains(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldContains(FieldWorkflowID, v))
}

// WorkflowIDHasPrefix applies the HasPrefix predicate on the "workflow_id" field.
func WorkflowIDHasPrefix(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldHasPrefix(FieldWorkflowID, v))
}

// WorkflowIDHasSuffix applies the HasSuffix predicate on the "workflow_id" field.
func WorkflowIDHasSuffix(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldHasSuffix(FieldWorkflowID, v))
}

// WorkflowIDEqualFold applies the EqualFold predicate on the "workflow_id" field.
func WorkflowIDEqualFold(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEqualFold(FieldWorkflowID, v))
}

// WorkflowIDContainsFold applies the ContainsFold predicate on the "workflow_id" field.
func WorkflowIDContainsFold(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldContainsFold(FieldWorkflowID, v))
}

// ChangeIDEQ applies the EQ predicate on the "change_id" field.
func ChangeIDEQ(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEQ(FieldChangeID, v))
}

// ChangeIDNEQ applies the NEQ predicate on the "change_id" field.
func ChangeIDNEQ(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldNEQ(FieldChangeID, v))
}

// ChangeIDIn applies the In predicate on the "change_id" field.
func ChangeIDIn(vs ...string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldIn(FieldChangeID, vs...))
}

// ChangeIDNotIn applies the NotIn predicate on the "change_id" field.
func ChangeIDNotIn(vs ...string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldNotIn(FieldChangeID, vs...))
}

// ChangeIDGT applies the GT predicate on the "change_id" field.
func ChangeIDGT(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldGT(FieldChangeID, v))
}

// ChangeIDGTE applies the GTE predicate on the "change_id" field.
func ChangeIDGTE(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldGTE(FieldChangeID, v))
}

// ChangeIDLT applies the LT predicate on the "change_id" field.
func ChangeIDLT(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldLT(FieldChangeID, v))
}

// ChangeIDLTE applies the LTE predicate on the "change_id" field.
func ChangeIDLTE(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldLTE(FieldChangeID, v))
}

// ChangeIDContains applies the Contains predicate on the "change_id" field.
func ChangeIDContains(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldContains(FieldChangeID, v))
}

// ChangeIDHasPrefix applies the HasPrefix predicate on the "change_id" field.
func ChangeIDHasPrefix(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldHasPrefix(FieldChangeID, v))
}

// ChangeIDHasSuffix applies the HasSuffix predicate on the "change_id" field.
func ChangeIDHasSuffix(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldHasSuffix(FieldChangeID, v))
}

// ChangeIDEqualFold applies the EqualFold predicate on the "change_id" field.
func ChangeIDEqualFold(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEqualFold(FieldChangeID, v))
}

// ChangeIDContainsFold applies the ContainsFold predicate on the "change_id" field.
func ChangeIDContainsFold(v string) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldContainsFold(FieldChangeID, v))
}

// VersionEQ applies the EQ predicate on the "version" field.
func VersionEQ(v int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldEQ(FieldVersion, v))
}

// VersionNEQ applies the NEQ predicate on the "version" field.
func VersionNEQ(v int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldNEQ(FieldVersion, v))
}

// VersionIn applies the In predicate on the "version" field.
func VersionIn(vs ...int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldIn(FieldVersion, vs...))
}

// VersionNotIn applies the NotIn predicate on the "version" field.
func VersionNotIn(vs ...int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldNotIn(FieldVersion, vs...))
}

// VersionGT applies the GT predicate on the "version" field.
func VersionGT(v int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldGT(FieldVersion, v))
}

// VersionGTE applies the GTE predicate on the "version" field.
func VersionGTE(v int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldGTE(FieldVersion, v))
}

// VersionLT applies the LT predicate on the "version" field.
func VersionLT(v int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldLT(FieldVersion, v))
}

// VersionLTE applies the LTE predicate on the "version" field.
func VersionLTE(v int) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.FieldLTE(FieldVersion, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FeatureFlagVersion) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FeatureFlagVersion) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FeatureFlagVersion) predicate.FeatureFlagVersion {
	return predicate.FeatureFlagVersion(sql.NotPredicates(p))
}
