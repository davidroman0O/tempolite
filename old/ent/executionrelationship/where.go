// Code generated by ent, DO NOT EDIT.

package executionrelationship

import (
	"entgo.io/ent/dialect/sql"
	"github.com/davidroman0O/tempolite/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLTE(FieldID, id))
}

// RunID applies equality check predicate on the "run_id" field. It's identical to RunIDEQ.
func RunID(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldRunID, v))
}

// ParentEntityID applies equality check predicate on the "parent_entity_id" field. It's identical to ParentEntityIDEQ.
func ParentEntityID(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldParentEntityID, v))
}

// ChildEntityID applies equality check predicate on the "child_entity_id" field. It's identical to ChildEntityIDEQ.
func ChildEntityID(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldChildEntityID, v))
}

// ParentID applies equality check predicate on the "parent_id" field. It's identical to ParentIDEQ.
func ParentID(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldParentID, v))
}

// ChildID applies equality check predicate on the "child_id" field. It's identical to ChildIDEQ.
func ChildID(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldChildID, v))
}

// ParentStepID applies equality check predicate on the "parent_step_id" field. It's identical to ParentStepIDEQ.
func ParentStepID(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldParentStepID, v))
}

// ChildStepID applies equality check predicate on the "child_step_id" field. It's identical to ChildStepIDEQ.
func ChildStepID(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldChildStepID, v))
}

// RunIDEQ applies the EQ predicate on the "run_id" field.
func RunIDEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldRunID, v))
}

// RunIDNEQ applies the NEQ predicate on the "run_id" field.
func RunIDNEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNEQ(FieldRunID, v))
}

// RunIDIn applies the In predicate on the "run_id" field.
func RunIDIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldIn(FieldRunID, vs...))
}

// RunIDNotIn applies the NotIn predicate on the "run_id" field.
func RunIDNotIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNotIn(FieldRunID, vs...))
}

// RunIDGT applies the GT predicate on the "run_id" field.
func RunIDGT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGT(FieldRunID, v))
}

// RunIDGTE applies the GTE predicate on the "run_id" field.
func RunIDGTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGTE(FieldRunID, v))
}

// RunIDLT applies the LT predicate on the "run_id" field.
func RunIDLT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLT(FieldRunID, v))
}

// RunIDLTE applies the LTE predicate on the "run_id" field.
func RunIDLTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLTE(FieldRunID, v))
}

// RunIDContains applies the Contains predicate on the "run_id" field.
func RunIDContains(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContains(FieldRunID, v))
}

// RunIDHasPrefix applies the HasPrefix predicate on the "run_id" field.
func RunIDHasPrefix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasPrefix(FieldRunID, v))
}

// RunIDHasSuffix applies the HasSuffix predicate on the "run_id" field.
func RunIDHasSuffix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasSuffix(FieldRunID, v))
}

// RunIDEqualFold applies the EqualFold predicate on the "run_id" field.
func RunIDEqualFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEqualFold(FieldRunID, v))
}

// RunIDContainsFold applies the ContainsFold predicate on the "run_id" field.
func RunIDContainsFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContainsFold(FieldRunID, v))
}

// ParentEntityIDEQ applies the EQ predicate on the "parent_entity_id" field.
func ParentEntityIDEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldParentEntityID, v))
}

// ParentEntityIDNEQ applies the NEQ predicate on the "parent_entity_id" field.
func ParentEntityIDNEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNEQ(FieldParentEntityID, v))
}

// ParentEntityIDIn applies the In predicate on the "parent_entity_id" field.
func ParentEntityIDIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldIn(FieldParentEntityID, vs...))
}

// ParentEntityIDNotIn applies the NotIn predicate on the "parent_entity_id" field.
func ParentEntityIDNotIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNotIn(FieldParentEntityID, vs...))
}

// ParentEntityIDGT applies the GT predicate on the "parent_entity_id" field.
func ParentEntityIDGT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGT(FieldParentEntityID, v))
}

// ParentEntityIDGTE applies the GTE predicate on the "parent_entity_id" field.
func ParentEntityIDGTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGTE(FieldParentEntityID, v))
}

// ParentEntityIDLT applies the LT predicate on the "parent_entity_id" field.
func ParentEntityIDLT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLT(FieldParentEntityID, v))
}

// ParentEntityIDLTE applies the LTE predicate on the "parent_entity_id" field.
func ParentEntityIDLTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLTE(FieldParentEntityID, v))
}

// ParentEntityIDContains applies the Contains predicate on the "parent_entity_id" field.
func ParentEntityIDContains(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContains(FieldParentEntityID, v))
}

// ParentEntityIDHasPrefix applies the HasPrefix predicate on the "parent_entity_id" field.
func ParentEntityIDHasPrefix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasPrefix(FieldParentEntityID, v))
}

// ParentEntityIDHasSuffix applies the HasSuffix predicate on the "parent_entity_id" field.
func ParentEntityIDHasSuffix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasSuffix(FieldParentEntityID, v))
}

// ParentEntityIDEqualFold applies the EqualFold predicate on the "parent_entity_id" field.
func ParentEntityIDEqualFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEqualFold(FieldParentEntityID, v))
}

// ParentEntityIDContainsFold applies the ContainsFold predicate on the "parent_entity_id" field.
func ParentEntityIDContainsFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContainsFold(FieldParentEntityID, v))
}

// ChildEntityIDEQ applies the EQ predicate on the "child_entity_id" field.
func ChildEntityIDEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldChildEntityID, v))
}

// ChildEntityIDNEQ applies the NEQ predicate on the "child_entity_id" field.
func ChildEntityIDNEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNEQ(FieldChildEntityID, v))
}

// ChildEntityIDIn applies the In predicate on the "child_entity_id" field.
func ChildEntityIDIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldIn(FieldChildEntityID, vs...))
}

// ChildEntityIDNotIn applies the NotIn predicate on the "child_entity_id" field.
func ChildEntityIDNotIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNotIn(FieldChildEntityID, vs...))
}

// ChildEntityIDGT applies the GT predicate on the "child_entity_id" field.
func ChildEntityIDGT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGT(FieldChildEntityID, v))
}

// ChildEntityIDGTE applies the GTE predicate on the "child_entity_id" field.
func ChildEntityIDGTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGTE(FieldChildEntityID, v))
}

// ChildEntityIDLT applies the LT predicate on the "child_entity_id" field.
func ChildEntityIDLT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLT(FieldChildEntityID, v))
}

// ChildEntityIDLTE applies the LTE predicate on the "child_entity_id" field.
func ChildEntityIDLTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLTE(FieldChildEntityID, v))
}

// ChildEntityIDContains applies the Contains predicate on the "child_entity_id" field.
func ChildEntityIDContains(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContains(FieldChildEntityID, v))
}

// ChildEntityIDHasPrefix applies the HasPrefix predicate on the "child_entity_id" field.
func ChildEntityIDHasPrefix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasPrefix(FieldChildEntityID, v))
}

// ChildEntityIDHasSuffix applies the HasSuffix predicate on the "child_entity_id" field.
func ChildEntityIDHasSuffix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasSuffix(FieldChildEntityID, v))
}

// ChildEntityIDEqualFold applies the EqualFold predicate on the "child_entity_id" field.
func ChildEntityIDEqualFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEqualFold(FieldChildEntityID, v))
}

// ChildEntityIDContainsFold applies the ContainsFold predicate on the "child_entity_id" field.
func ChildEntityIDContainsFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContainsFold(FieldChildEntityID, v))
}

// ParentIDEQ applies the EQ predicate on the "parent_id" field.
func ParentIDEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldParentID, v))
}

// ParentIDNEQ applies the NEQ predicate on the "parent_id" field.
func ParentIDNEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNEQ(FieldParentID, v))
}

// ParentIDIn applies the In predicate on the "parent_id" field.
func ParentIDIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldIn(FieldParentID, vs...))
}

// ParentIDNotIn applies the NotIn predicate on the "parent_id" field.
func ParentIDNotIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNotIn(FieldParentID, vs...))
}

// ParentIDGT applies the GT predicate on the "parent_id" field.
func ParentIDGT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGT(FieldParentID, v))
}

// ParentIDGTE applies the GTE predicate on the "parent_id" field.
func ParentIDGTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGTE(FieldParentID, v))
}

// ParentIDLT applies the LT predicate on the "parent_id" field.
func ParentIDLT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLT(FieldParentID, v))
}

// ParentIDLTE applies the LTE predicate on the "parent_id" field.
func ParentIDLTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLTE(FieldParentID, v))
}

// ParentIDContains applies the Contains predicate on the "parent_id" field.
func ParentIDContains(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContains(FieldParentID, v))
}

// ParentIDHasPrefix applies the HasPrefix predicate on the "parent_id" field.
func ParentIDHasPrefix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasPrefix(FieldParentID, v))
}

// ParentIDHasSuffix applies the HasSuffix predicate on the "parent_id" field.
func ParentIDHasSuffix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasSuffix(FieldParentID, v))
}

// ParentIDEqualFold applies the EqualFold predicate on the "parent_id" field.
func ParentIDEqualFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEqualFold(FieldParentID, v))
}

// ParentIDContainsFold applies the ContainsFold predicate on the "parent_id" field.
func ParentIDContainsFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContainsFold(FieldParentID, v))
}

// ChildIDEQ applies the EQ predicate on the "child_id" field.
func ChildIDEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldChildID, v))
}

// ChildIDNEQ applies the NEQ predicate on the "child_id" field.
func ChildIDNEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNEQ(FieldChildID, v))
}

// ChildIDIn applies the In predicate on the "child_id" field.
func ChildIDIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldIn(FieldChildID, vs...))
}

// ChildIDNotIn applies the NotIn predicate on the "child_id" field.
func ChildIDNotIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNotIn(FieldChildID, vs...))
}

// ChildIDGT applies the GT predicate on the "child_id" field.
func ChildIDGT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGT(FieldChildID, v))
}

// ChildIDGTE applies the GTE predicate on the "child_id" field.
func ChildIDGTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGTE(FieldChildID, v))
}

// ChildIDLT applies the LT predicate on the "child_id" field.
func ChildIDLT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLT(FieldChildID, v))
}

// ChildIDLTE applies the LTE predicate on the "child_id" field.
func ChildIDLTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLTE(FieldChildID, v))
}

// ChildIDContains applies the Contains predicate on the "child_id" field.
func ChildIDContains(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContains(FieldChildID, v))
}

// ChildIDHasPrefix applies the HasPrefix predicate on the "child_id" field.
func ChildIDHasPrefix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasPrefix(FieldChildID, v))
}

// ChildIDHasSuffix applies the HasSuffix predicate on the "child_id" field.
func ChildIDHasSuffix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasSuffix(FieldChildID, v))
}

// ChildIDEqualFold applies the EqualFold predicate on the "child_id" field.
func ChildIDEqualFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEqualFold(FieldChildID, v))
}

// ChildIDContainsFold applies the ContainsFold predicate on the "child_id" field.
func ChildIDContainsFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContainsFold(FieldChildID, v))
}

// ParentTypeEQ applies the EQ predicate on the "parent_type" field.
func ParentTypeEQ(v ParentType) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldParentType, v))
}

// ParentTypeNEQ applies the NEQ predicate on the "parent_type" field.
func ParentTypeNEQ(v ParentType) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNEQ(FieldParentType, v))
}

// ParentTypeIn applies the In predicate on the "parent_type" field.
func ParentTypeIn(vs ...ParentType) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldIn(FieldParentType, vs...))
}

// ParentTypeNotIn applies the NotIn predicate on the "parent_type" field.
func ParentTypeNotIn(vs ...ParentType) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNotIn(FieldParentType, vs...))
}

// ChildTypeEQ applies the EQ predicate on the "child_type" field.
func ChildTypeEQ(v ChildType) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldChildType, v))
}

// ChildTypeNEQ applies the NEQ predicate on the "child_type" field.
func ChildTypeNEQ(v ChildType) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNEQ(FieldChildType, v))
}

// ChildTypeIn applies the In predicate on the "child_type" field.
func ChildTypeIn(vs ...ChildType) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldIn(FieldChildType, vs...))
}

// ChildTypeNotIn applies the NotIn predicate on the "child_type" field.
func ChildTypeNotIn(vs ...ChildType) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNotIn(FieldChildType, vs...))
}

// ParentStepIDEQ applies the EQ predicate on the "parent_step_id" field.
func ParentStepIDEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldParentStepID, v))
}

// ParentStepIDNEQ applies the NEQ predicate on the "parent_step_id" field.
func ParentStepIDNEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNEQ(FieldParentStepID, v))
}

// ParentStepIDIn applies the In predicate on the "parent_step_id" field.
func ParentStepIDIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldIn(FieldParentStepID, vs...))
}

// ParentStepIDNotIn applies the NotIn predicate on the "parent_step_id" field.
func ParentStepIDNotIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNotIn(FieldParentStepID, vs...))
}

// ParentStepIDGT applies the GT predicate on the "parent_step_id" field.
func ParentStepIDGT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGT(FieldParentStepID, v))
}

// ParentStepIDGTE applies the GTE predicate on the "parent_step_id" field.
func ParentStepIDGTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGTE(FieldParentStepID, v))
}

// ParentStepIDLT applies the LT predicate on the "parent_step_id" field.
func ParentStepIDLT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLT(FieldParentStepID, v))
}

// ParentStepIDLTE applies the LTE predicate on the "parent_step_id" field.
func ParentStepIDLTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLTE(FieldParentStepID, v))
}

// ParentStepIDContains applies the Contains predicate on the "parent_step_id" field.
func ParentStepIDContains(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContains(FieldParentStepID, v))
}

// ParentStepIDHasPrefix applies the HasPrefix predicate on the "parent_step_id" field.
func ParentStepIDHasPrefix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasPrefix(FieldParentStepID, v))
}

// ParentStepIDHasSuffix applies the HasSuffix predicate on the "parent_step_id" field.
func ParentStepIDHasSuffix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasSuffix(FieldParentStepID, v))
}

// ParentStepIDEqualFold applies the EqualFold predicate on the "parent_step_id" field.
func ParentStepIDEqualFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEqualFold(FieldParentStepID, v))
}

// ParentStepIDContainsFold applies the ContainsFold predicate on the "parent_step_id" field.
func ParentStepIDContainsFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContainsFold(FieldParentStepID, v))
}

// ChildStepIDEQ applies the EQ predicate on the "child_step_id" field.
func ChildStepIDEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEQ(FieldChildStepID, v))
}

// ChildStepIDNEQ applies the NEQ predicate on the "child_step_id" field.
func ChildStepIDNEQ(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNEQ(FieldChildStepID, v))
}

// ChildStepIDIn applies the In predicate on the "child_step_id" field.
func ChildStepIDIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldIn(FieldChildStepID, vs...))
}

// ChildStepIDNotIn applies the NotIn predicate on the "child_step_id" field.
func ChildStepIDNotIn(vs ...string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldNotIn(FieldChildStepID, vs...))
}

// ChildStepIDGT applies the GT predicate on the "child_step_id" field.
func ChildStepIDGT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGT(FieldChildStepID, v))
}

// ChildStepIDGTE applies the GTE predicate on the "child_step_id" field.
func ChildStepIDGTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldGTE(FieldChildStepID, v))
}

// ChildStepIDLT applies the LT predicate on the "child_step_id" field.
func ChildStepIDLT(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLT(FieldChildStepID, v))
}

// ChildStepIDLTE applies the LTE predicate on the "child_step_id" field.
func ChildStepIDLTE(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldLTE(FieldChildStepID, v))
}

// ChildStepIDContains applies the Contains predicate on the "child_step_id" field.
func ChildStepIDContains(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContains(FieldChildStepID, v))
}

// ChildStepIDHasPrefix applies the HasPrefix predicate on the "child_step_id" field.
func ChildStepIDHasPrefix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasPrefix(FieldChildStepID, v))
}

// ChildStepIDHasSuffix applies the HasSuffix predicate on the "child_step_id" field.
func ChildStepIDHasSuffix(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldHasSuffix(FieldChildStepID, v))
}

// ChildStepIDEqualFold applies the EqualFold predicate on the "child_step_id" field.
func ChildStepIDEqualFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldEqualFold(FieldChildStepID, v))
}

// ChildStepIDContainsFold applies the ContainsFold predicate on the "child_step_id" field.
func ChildStepIDContainsFold(v string) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.FieldContainsFold(FieldChildStepID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ExecutionRelationship) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ExecutionRelationship) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ExecutionRelationship) predicate.ExecutionRelationship {
	return predicate.ExecutionRelationship(sql.NotPredicates(p))
}
