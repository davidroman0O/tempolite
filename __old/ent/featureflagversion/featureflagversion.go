// Code generated by ent, DO NOT EDIT.

package featureflagversion

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the featureflagversion type in the database.
	Label = "feature_flag_version"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldWorkflowType holds the string denoting the workflow_type field in the database.
	FieldWorkflowType = "workflow_type"
	// FieldWorkflowID holds the string denoting the workflow_id field in the database.
	FieldWorkflowID = "workflow_id"
	// FieldChangeID holds the string denoting the change_id field in the database.
	FieldChangeID = "change_id"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// Table holds the table name of the featureflagversion in the database.
	Table = "feature_flag_versions"
)

// Columns holds all SQL columns for featureflagversion fields.
var Columns = []string{
	FieldID,
	FieldWorkflowType,
	FieldWorkflowID,
	FieldChangeID,
	FieldVersion,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the FeatureFlagVersion queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByWorkflowType orders the results by the workflow_type field.
func ByWorkflowType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldWorkflowType, opts...).ToFunc()
}

// ByWorkflowID orders the results by the workflow_id field.
func ByWorkflowID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldWorkflowID, opts...).ToFunc()
}

// ByChangeID orders the results by the change_id field.
func ByChangeID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldChangeID, opts...).ToFunc()
}

// ByVersion orders the results by the version field.
func ByVersion(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVersion, opts...).ToFunc()
}
