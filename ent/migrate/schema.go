// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ActivityDataColumns holds the columns for the "activity_data" table.
	ActivityDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "inputs", Type: field.TypeBytes, Nullable: true},
		{Name: "output", Type: field.TypeBytes, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "entity_id", Type: field.TypeInt, Unique: true},
	}
	// ActivityDataTable holds the schema information for the "activity_data" table.
	ActivityDataTable = &schema.Table{
		Name:       "activity_data",
		Columns:    ActivityDataColumns,
		PrimaryKey: []*schema.Column{ActivityDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "activity_data_activity_entities_activity_data",
				Columns:    []*schema.Column{ActivityDataColumns[5]},
				RefColumns: []*schema.Column{ActivityEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ActivityEntitiesColumns holds the columns for the "activity_entities" table.
	ActivityEntitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "handler_name", Type: field.TypeString},
		{Name: "type", Type: field.TypeString, Default: "activity"},
		{Name: "status", Type: field.TypeString, Default: "Pending"},
		{Name: "step_id", Type: field.TypeString},
		{Name: "run_id", Type: field.TypeInt},
		{Name: "retry_policy", Type: field.TypeJSON},
		{Name: "retry_state", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "workflow_entity_activity_children", Type: field.TypeInt},
	}
	// ActivityEntitiesTable holds the schema information for the "activity_entities" table.
	ActivityEntitiesTable = &schema.Table{
		Name:       "activity_entities",
		Columns:    ActivityEntitiesColumns,
		PrimaryKey: []*schema.Column{ActivityEntitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "activity_entities_workflow_entities_activity_children",
				Columns:    []*schema.Column{ActivityEntitiesColumns[10]},
				RefColumns: []*schema.Column{WorkflowEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ActivityExecutionsColumns holds the columns for the "activity_executions" table.
	ActivityExecutionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "started_at", Type: field.TypeTime},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "Pending"},
		{Name: "error", Type: field.TypeString, Nullable: true},
		{Name: "stack_trace", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "activity_entity_id", Type: field.TypeInt},
	}
	// ActivityExecutionsTable holds the schema information for the "activity_executions" table.
	ActivityExecutionsTable = &schema.Table{
		Name:       "activity_executions",
		Columns:    ActivityExecutionsColumns,
		PrimaryKey: []*schema.Column{ActivityExecutionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "activity_executions_activity_entities_executions",
				Columns:    []*schema.Column{ActivityExecutionsColumns[8]},
				RefColumns: []*schema.Column{ActivityEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ActivityExecutionDataColumns holds the columns for the "activity_execution_data" table.
	ActivityExecutionDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "last_heartbeat", Type: field.TypeTime, Nullable: true},
		{Name: "outputs", Type: field.TypeBytes, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "execution_id", Type: field.TypeInt, Unique: true},
	}
	// ActivityExecutionDataTable holds the schema information for the "activity_execution_data" table.
	ActivityExecutionDataTable = &schema.Table{
		Name:       "activity_execution_data",
		Columns:    ActivityExecutionDataColumns,
		PrimaryKey: []*schema.Column{ActivityExecutionDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "activity_execution_data_activity_executions_execution_data",
				Columns:    []*schema.Column{ActivityExecutionDataColumns[5]},
				RefColumns: []*schema.Column{ActivityExecutionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// HierarchiesColumns holds the columns for the "hierarchies" table.
	HierarchiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "parent_entity_id", Type: field.TypeInt},
		{Name: "child_entity_id", Type: field.TypeInt},
		{Name: "parent_execution_id", Type: field.TypeInt},
		{Name: "child_execution_id", Type: field.TypeInt},
		{Name: "parent_step_id", Type: field.TypeString},
		{Name: "child_step_id", Type: field.TypeString},
		{Name: "parent_type", Type: field.TypeString},
		{Name: "child_type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "run_id", Type: field.TypeInt},
	}
	// HierarchiesTable holds the schema information for the "hierarchies" table.
	HierarchiesTable = &schema.Table{
		Name:       "hierarchies",
		Columns:    HierarchiesColumns,
		PrimaryKey: []*schema.Column{HierarchiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hierarchies_runs_hierarchies",
				Columns:    []*schema.Column{HierarchiesColumns[11]},
				RefColumns: []*schema.Column{RunsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// QueuesColumns holds the columns for the "queues" table.
	QueuesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// QueuesTable holds the schema information for the "queues" table.
	QueuesTable = &schema.Table{
		Name:       "queues",
		Columns:    QueuesColumns,
		PrimaryKey: []*schema.Column{QueuesColumns[0]},
	}
	// RunsColumns holds the columns for the "runs" table.
	RunsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// RunsTable holds the schema information for the "runs" table.
	RunsTable = &schema.Table{
		Name:       "runs",
		Columns:    RunsColumns,
		PrimaryKey: []*schema.Column{RunsColumns[0]},
	}
	// SagaDataColumns holds the columns for the "saga_data" table.
	SagaDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "entity_id", Type: field.TypeInt, Unique: true},
	}
	// SagaDataTable holds the schema information for the "saga_data" table.
	SagaDataTable = &schema.Table{
		Name:       "saga_data",
		Columns:    SagaDataColumns,
		PrimaryKey: []*schema.Column{SagaDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "saga_data_saga_entities_saga_data",
				Columns:    []*schema.Column{SagaDataColumns[3]},
				RefColumns: []*schema.Column{SagaEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SagaEntitiesColumns holds the columns for the "saga_entities" table.
	SagaEntitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "handler_name", Type: field.TypeString},
		{Name: "type", Type: field.TypeString, Default: "saga"},
		{Name: "status", Type: field.TypeString, Default: "Pending"},
		{Name: "step_id", Type: field.TypeString},
		{Name: "run_id", Type: field.TypeInt},
		{Name: "retry_policy", Type: field.TypeJSON},
		{Name: "retry_state", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "workflow_entity_saga_children", Type: field.TypeInt},
	}
	// SagaEntitiesTable holds the schema information for the "saga_entities" table.
	SagaEntitiesTable = &schema.Table{
		Name:       "saga_entities",
		Columns:    SagaEntitiesColumns,
		PrimaryKey: []*schema.Column{SagaEntitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "saga_entities_workflow_entities_saga_children",
				Columns:    []*schema.Column{SagaEntitiesColumns[10]},
				RefColumns: []*schema.Column{WorkflowEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SagaExecutionsColumns holds the columns for the "saga_executions" table.
	SagaExecutionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "execution_type", Type: field.TypeString, Default: "transaction"},
		{Name: "started_at", Type: field.TypeTime},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "Pending"},
		{Name: "error", Type: field.TypeString, Nullable: true},
		{Name: "stack_trace", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "saga_entity_id", Type: field.TypeInt},
	}
	// SagaExecutionsTable holds the schema information for the "saga_executions" table.
	SagaExecutionsTable = &schema.Table{
		Name:       "saga_executions",
		Columns:    SagaExecutionsColumns,
		PrimaryKey: []*schema.Column{SagaExecutionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "saga_executions_saga_entities_executions",
				Columns:    []*schema.Column{SagaExecutionsColumns[9]},
				RefColumns: []*schema.Column{SagaEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SagaExecutionDataColumns holds the columns for the "saga_execution_data" table.
	SagaExecutionDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "last_heartbeat", Type: field.TypeTime, Nullable: true},
		{Name: "step_index", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "execution_id", Type: field.TypeInt, Unique: true},
	}
	// SagaExecutionDataTable holds the schema information for the "saga_execution_data" table.
	SagaExecutionDataTable = &schema.Table{
		Name:       "saga_execution_data",
		Columns:    SagaExecutionDataColumns,
		PrimaryKey: []*schema.Column{SagaExecutionDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "saga_execution_data_saga_executions_execution_data",
				Columns:    []*schema.Column{SagaExecutionDataColumns[5]},
				RefColumns: []*schema.Column{SagaExecutionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SagaValuesColumns holds the columns for the "saga_values" table.
	SagaValuesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString},
		{Name: "value", Type: field.TypeBytes},
		{Name: "saga_entity_id", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "saga_data_values", Type: field.TypeInt, Nullable: true},
		{Name: "saga_entity_values", Type: field.TypeInt, Nullable: true},
		{Name: "saga_execution_id", Type: field.TypeInt},
		{Name: "saga_execution_data_values", Type: field.TypeInt, Nullable: true},
	}
	// SagaValuesTable holds the schema information for the "saga_values" table.
	SagaValuesTable = &schema.Table{
		Name:       "saga_values",
		Columns:    SagaValuesColumns,
		PrimaryKey: []*schema.Column{SagaValuesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "saga_values_saga_data_values",
				Columns:    []*schema.Column{SagaValuesColumns[6]},
				RefColumns: []*schema.Column{SagaDataColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "saga_values_saga_entities_values",
				Columns:    []*schema.Column{SagaValuesColumns[7]},
				RefColumns: []*schema.Column{SagaEntitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "saga_values_saga_executions_values",
				Columns:    []*schema.Column{SagaValuesColumns[8]},
				RefColumns: []*schema.Column{SagaExecutionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "saga_values_saga_execution_data_values",
				Columns:    []*schema.Column{SagaValuesColumns[9]},
				RefColumns: []*schema.Column{SagaExecutionDataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SideEffectDataColumns holds the columns for the "side_effect_data" table.
	SideEffectDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "entity_id", Type: field.TypeInt, Unique: true},
	}
	// SideEffectDataTable holds the schema information for the "side_effect_data" table.
	SideEffectDataTable = &schema.Table{
		Name:       "side_effect_data",
		Columns:    SideEffectDataColumns,
		PrimaryKey: []*schema.Column{SideEffectDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "side_effect_data_side_effect_entities_side_effect_data",
				Columns:    []*schema.Column{SideEffectDataColumns[3]},
				RefColumns: []*schema.Column{SideEffectEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SideEffectEntitiesColumns holds the columns for the "side_effect_entities" table.
	SideEffectEntitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "handler_name", Type: field.TypeString},
		{Name: "type", Type: field.TypeString, Default: "side_effect"},
		{Name: "status", Type: field.TypeString, Default: "Pending"},
		{Name: "step_id", Type: field.TypeString},
		{Name: "run_id", Type: field.TypeInt},
		{Name: "retry_policy", Type: field.TypeJSON},
		{Name: "retry_state", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "workflow_entity_side_effect_children", Type: field.TypeInt},
	}
	// SideEffectEntitiesTable holds the schema information for the "side_effect_entities" table.
	SideEffectEntitiesTable = &schema.Table{
		Name:       "side_effect_entities",
		Columns:    SideEffectEntitiesColumns,
		PrimaryKey: []*schema.Column{SideEffectEntitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "side_effect_entities_workflow_entities_side_effect_children",
				Columns:    []*schema.Column{SideEffectEntitiesColumns[10]},
				RefColumns: []*schema.Column{WorkflowEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SideEffectExecutionsColumns holds the columns for the "side_effect_executions" table.
	SideEffectExecutionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "started_at", Type: field.TypeTime},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "Pending"},
		{Name: "error", Type: field.TypeString, Nullable: true},
		{Name: "stack_trace", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "side_effect_entity_id", Type: field.TypeInt},
	}
	// SideEffectExecutionsTable holds the schema information for the "side_effect_executions" table.
	SideEffectExecutionsTable = &schema.Table{
		Name:       "side_effect_executions",
		Columns:    SideEffectExecutionsColumns,
		PrimaryKey: []*schema.Column{SideEffectExecutionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "side_effect_executions_side_effect_entities_executions",
				Columns:    []*schema.Column{SideEffectExecutionsColumns[8]},
				RefColumns: []*schema.Column{SideEffectEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SideEffectExecutionDataColumns holds the columns for the "side_effect_execution_data" table.
	SideEffectExecutionDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "outputs", Type: field.TypeBytes, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "execution_id", Type: field.TypeInt, Unique: true},
	}
	// SideEffectExecutionDataTable holds the schema information for the "side_effect_execution_data" table.
	SideEffectExecutionDataTable = &schema.Table{
		Name:       "side_effect_execution_data",
		Columns:    SideEffectExecutionDataColumns,
		PrimaryKey: []*schema.Column{SideEffectExecutionDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "side_effect_execution_data_side_effect_executions_execution_data",
				Columns:    []*schema.Column{SideEffectExecutionDataColumns[4]},
				RefColumns: []*schema.Column{SideEffectExecutionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SignalDataColumns holds the columns for the "signal_data" table.
	SignalDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "entity_id", Type: field.TypeInt, Unique: true},
	}
	// SignalDataTable holds the schema information for the "signal_data" table.
	SignalDataTable = &schema.Table{
		Name:       "signal_data",
		Columns:    SignalDataColumns,
		PrimaryKey: []*schema.Column{SignalDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "signal_data_signal_entities_signal_data",
				Columns:    []*schema.Column{SignalDataColumns[4]},
				RefColumns: []*schema.Column{SignalEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SignalEntitiesColumns holds the columns for the "signal_entities" table.
	SignalEntitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "handler_name", Type: field.TypeString},
		{Name: "type", Type: field.TypeString, Default: "signal"},
		{Name: "status", Type: field.TypeString, Default: "Pending"},
		{Name: "step_id", Type: field.TypeString},
		{Name: "run_id", Type: field.TypeInt},
		{Name: "retry_policy", Type: field.TypeJSON},
		{Name: "retry_state", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// SignalEntitiesTable holds the schema information for the "signal_entities" table.
	SignalEntitiesTable = &schema.Table{
		Name:       "signal_entities",
		Columns:    SignalEntitiesColumns,
		PrimaryKey: []*schema.Column{SignalEntitiesColumns[0]},
	}
	// SignalExecutionsColumns holds the columns for the "signal_executions" table.
	SignalExecutionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "started_at", Type: field.TypeTime},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "Pending"},
		{Name: "error", Type: field.TypeString, Nullable: true},
		{Name: "stack_trace", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "entity_id", Type: field.TypeInt},
	}
	// SignalExecutionsTable holds the schema information for the "signal_executions" table.
	SignalExecutionsTable = &schema.Table{
		Name:       "signal_executions",
		Columns:    SignalExecutionsColumns,
		PrimaryKey: []*schema.Column{SignalExecutionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "signal_executions_signal_entities_executions",
				Columns:    []*schema.Column{SignalExecutionsColumns[8]},
				RefColumns: []*schema.Column{SignalEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SignalExecutionDataColumns holds the columns for the "signal_execution_data" table.
	SignalExecutionDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "value", Type: field.TypeBytes, Nullable: true},
		{Name: "kind", Type: field.TypeUint},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "execution_id", Type: field.TypeInt, Unique: true},
	}
	// SignalExecutionDataTable holds the schema information for the "signal_execution_data" table.
	SignalExecutionDataTable = &schema.Table{
		Name:       "signal_execution_data",
		Columns:    SignalExecutionDataColumns,
		PrimaryKey: []*schema.Column{SignalExecutionDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "signal_execution_data_signal_executions_execution_data",
				Columns:    []*schema.Column{SignalExecutionDataColumns[5]},
				RefColumns: []*schema.Column{SignalExecutionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// VersionsColumns holds the columns for the "versions" table.
	VersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "change_id", Type: field.TypeString},
		{Name: "version", Type: field.TypeInt},
		{Name: "data", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "entity_id", Type: field.TypeInt},
	}
	// VersionsTable holds the schema information for the "versions" table.
	VersionsTable = &schema.Table{
		Name:       "versions",
		Columns:    VersionsColumns,
		PrimaryKey: []*schema.Column{VersionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "versions_workflow_entities_versions",
				Columns:    []*schema.Column{VersionsColumns[6]},
				RefColumns: []*schema.Column{WorkflowEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WorkflowDataColumns holds the columns for the "workflow_data" table.
	WorkflowDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "duration", Type: field.TypeString, Nullable: true},
		{Name: "paused", Type: field.TypeBool},
		{Name: "resumable", Type: field.TypeBool},
		{Name: "is_root", Type: field.TypeBool},
		{Name: "inputs", Type: field.TypeBytes, Nullable: true},
		{Name: "continued_from", Type: field.TypeInt, Nullable: true},
		{Name: "continued_execution_from", Type: field.TypeInt, Nullable: true},
		{Name: "workflow_step_id", Type: field.TypeString, Nullable: true},
		{Name: "workflow_from", Type: field.TypeInt, Nullable: true},
		{Name: "workflow_execution_from", Type: field.TypeInt, Nullable: true},
		{Name: "versions", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "entity_id", Type: field.TypeInt, Unique: true},
	}
	// WorkflowDataTable holds the schema information for the "workflow_data" table.
	WorkflowDataTable = &schema.Table{
		Name:       "workflow_data",
		Columns:    WorkflowDataColumns,
		PrimaryKey: []*schema.Column{WorkflowDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workflow_data_workflow_entities_workflow_data",
				Columns:    []*schema.Column{WorkflowDataColumns[14]},
				RefColumns: []*schema.Column{WorkflowEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WorkflowEntitiesColumns holds the columns for the "workflow_entities" table.
	WorkflowEntitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "handler_name", Type: field.TypeString},
		{Name: "type", Type: field.TypeString, Default: "workflow"},
		{Name: "status", Type: field.TypeString, Default: "Pending"},
		{Name: "step_id", Type: field.TypeString},
		{Name: "retry_policy", Type: field.TypeJSON},
		{Name: "retry_state", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "queue_entities", Type: field.TypeInt, Nullable: true},
		{Name: "run_id", Type: field.TypeInt},
	}
	// WorkflowEntitiesTable holds the schema information for the "workflow_entities" table.
	WorkflowEntitiesTable = &schema.Table{
		Name:       "workflow_entities",
		Columns:    WorkflowEntitiesColumns,
		PrimaryKey: []*schema.Column{WorkflowEntitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workflow_entities_queues_entities",
				Columns:    []*schema.Column{WorkflowEntitiesColumns[9]},
				RefColumns: []*schema.Column{QueuesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "workflow_entities_runs_entities",
				Columns:    []*schema.Column{WorkflowEntitiesColumns[10]},
				RefColumns: []*schema.Column{RunsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WorkflowExecutionsColumns holds the columns for the "workflow_executions" table.
	WorkflowExecutionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "started_at", Type: field.TypeTime},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "Pending"},
		{Name: "error", Type: field.TypeString, Nullable: true},
		{Name: "stack_trace", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "workflow_entity_id", Type: field.TypeInt},
	}
	// WorkflowExecutionsTable holds the schema information for the "workflow_executions" table.
	WorkflowExecutionsTable = &schema.Table{
		Name:       "workflow_executions",
		Columns:    WorkflowExecutionsColumns,
		PrimaryKey: []*schema.Column{WorkflowExecutionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workflow_executions_workflow_entities_executions",
				Columns:    []*schema.Column{WorkflowExecutionsColumns[8]},
				RefColumns: []*schema.Column{WorkflowEntitiesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// WorkflowExecutionDataColumns holds the columns for the "workflow_execution_data" table.
	WorkflowExecutionDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "last_heartbeat", Type: field.TypeTime, Nullable: true},
		{Name: "outputs", Type: field.TypeBytes, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "execution_id", Type: field.TypeInt, Unique: true},
	}
	// WorkflowExecutionDataTable holds the schema information for the "workflow_execution_data" table.
	WorkflowExecutionDataTable = &schema.Table{
		Name:       "workflow_execution_data",
		Columns:    WorkflowExecutionDataColumns,
		PrimaryKey: []*schema.Column{WorkflowExecutionDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workflow_execution_data_workflow_executions_execution_data",
				Columns:    []*schema.Column{WorkflowExecutionDataColumns[5]},
				RefColumns: []*schema.Column{WorkflowExecutionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActivityDataTable,
		ActivityEntitiesTable,
		ActivityExecutionsTable,
		ActivityExecutionDataTable,
		HierarchiesTable,
		QueuesTable,
		RunsTable,
		SagaDataTable,
		SagaEntitiesTable,
		SagaExecutionsTable,
		SagaExecutionDataTable,
		SagaValuesTable,
		SideEffectDataTable,
		SideEffectEntitiesTable,
		SideEffectExecutionsTable,
		SideEffectExecutionDataTable,
		SignalDataTable,
		SignalEntitiesTable,
		SignalExecutionsTable,
		SignalExecutionDataTable,
		VersionsTable,
		WorkflowDataTable,
		WorkflowEntitiesTable,
		WorkflowExecutionsTable,
		WorkflowExecutionDataTable,
	}
)

func init() {
	ActivityDataTable.ForeignKeys[0].RefTable = ActivityEntitiesTable
	ActivityEntitiesTable.ForeignKeys[0].RefTable = WorkflowEntitiesTable
	ActivityExecutionsTable.ForeignKeys[0].RefTable = ActivityEntitiesTable
	ActivityExecutionDataTable.ForeignKeys[0].RefTable = ActivityExecutionsTable
	HierarchiesTable.ForeignKeys[0].RefTable = RunsTable
	SagaDataTable.ForeignKeys[0].RefTable = SagaEntitiesTable
	SagaEntitiesTable.ForeignKeys[0].RefTable = WorkflowEntitiesTable
	SagaExecutionsTable.ForeignKeys[0].RefTable = SagaEntitiesTable
	SagaExecutionDataTable.ForeignKeys[0].RefTable = SagaExecutionsTable
	SagaValuesTable.ForeignKeys[0].RefTable = SagaDataTable
	SagaValuesTable.ForeignKeys[1].RefTable = SagaEntitiesTable
	SagaValuesTable.ForeignKeys[2].RefTable = SagaExecutionsTable
	SagaValuesTable.ForeignKeys[3].RefTable = SagaExecutionDataTable
	SideEffectDataTable.ForeignKeys[0].RefTable = SideEffectEntitiesTable
	SideEffectEntitiesTable.ForeignKeys[0].RefTable = WorkflowEntitiesTable
	SideEffectExecutionsTable.ForeignKeys[0].RefTable = SideEffectEntitiesTable
	SideEffectExecutionDataTable.ForeignKeys[0].RefTable = SideEffectExecutionsTable
	SignalDataTable.ForeignKeys[0].RefTable = SignalEntitiesTable
	SignalExecutionsTable.ForeignKeys[0].RefTable = SignalEntitiesTable
	SignalExecutionDataTable.ForeignKeys[0].RefTable = SignalExecutionsTable
	VersionsTable.ForeignKeys[0].RefTable = WorkflowEntitiesTable
	WorkflowDataTable.ForeignKeys[0].RefTable = WorkflowEntitiesTable
	WorkflowEntitiesTable.ForeignKeys[0].RefTable = QueuesTable
	WorkflowEntitiesTable.ForeignKeys[1].RefTable = RunsTable
	WorkflowExecutionsTable.ForeignKeys[0].RefTable = WorkflowEntitiesTable
	WorkflowExecutionDataTable.ForeignKeys[0].RefTable = WorkflowExecutionsTable
}
